// <auto-generated />
using System;
using KickDumbGiveawayBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KickDumbGiveawayBot.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("KickDumbGiveawayBot.Data.Models.GiveawayModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodeWord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Giveaways");
                });

            modelBuilder.Entity("KickDumbGiveawayBot.Data.Models.PosterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GiveawayId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KickId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GiveawayId");

                    b.ToTable("Posters");
                });

            modelBuilder.Entity("KickDumbGiveawayBot.Data.Models.RollModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("PosterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PosterId");

                    b.ToTable("Rolls");
                });

            modelBuilder.Entity("KickDumbGiveawayBot.Data.Models.PosterModel", b =>
                {
                    b.HasOne("KickDumbGiveawayBot.Data.Models.GiveawayModel", "Giveaway")
                        .WithMany("Posters")
                        .HasForeignKey("GiveawayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Giveaway");
                });

            modelBuilder.Entity("KickDumbGiveawayBot.Data.Models.RollModel", b =>
                {
                    b.HasOne("KickDumbGiveawayBot.Data.Models.PosterModel", "Poster")
                        .WithMany("Rolls")
                        .HasForeignKey("PosterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poster");
                });

            modelBuilder.Entity("KickDumbGiveawayBot.Data.Models.GiveawayModel", b =>
                {
                    b.Navigation("Posters");
                });

            modelBuilder.Entity("KickDumbGiveawayBot.Data.Models.PosterModel", b =>
                {
                    b.Navigation("Rolls");
                });
#pragma warning restore 612, 618
        }
    }
}
